{
  "apiRoutes": [],
  "htmlRoutes": [
    {
      "file": "./(quizzes)/index.tsx",
      "page": "/(quizzes)/index",
      "namedRegex": "^(?:/\\(quizzes\\))?(?:/)?$",
      "routeKeys": {}
    },
    {
      "file": "./index.tsx",
      "page": "/index",
      "namedRegex": "^/(?:/)?$",
      "routeKeys": {}
    },
    {
      "file": "./(quizzes)/(m1)/InOnAt.tsx",
      "page": "/(quizzes)/(m1)/InOnAt",
      "namedRegex": "^(?:/\\(quizzes\\))?(?:/\\(m1\\))?/InOnAt(?:/)?$",
      "routeKeys": {}
    },
    {
      "file": "./(quizzes)/(m1)/VerbTenses.tsx",
      "page": "/(quizzes)/(m1)/VerbTenses",
      "namedRegex": "^(?:/\\(quizzes\\))?(?:/\\(m1\\))?/VerbTenses(?:/)?$",
      "routeKeys": {}
    },
    {
      "file": "./(settings)/index.tsx",
      "page": "/(settings)/index",
      "namedRegex": "^(?:/\\(settings\\))?(?:/)?$",
      "routeKeys": {}
    },
    {
      "file": "./(quizzes)/(m1)/TypesOfSentences.tsx",
      "page": "/(quizzes)/(m1)/TypesOfSentences",
      "namedRegex": "^(?:/\\(quizzes\\))?(?:/\\(m1\\))?/TypesOfSentences(?:/)?$",
      "routeKeys": {}
    },
    {
      "file": "./(quizzes)/(m1)/PerfectSentences.tsx",
      "page": "/(quizzes)/(m1)/PerfectSentences",
      "namedRegex": "^(?:/\\(quizzes\\))?(?:/\\(m1\\))?/PerfectSentences(?:/)?$",
      "routeKeys": {}
    },
    {
      "file": "./(quizzes)/(m1)/SimpleGerundsVSInfinitives.tsx",
      "page": "/(quizzes)/(m1)/SimpleGerundsVSInfinitives",
      "namedRegex": "^(?:/\\(quizzes\\))?(?:/\\(m1\\))?/SimpleGerundsVSInfinitives(?:/)?$",
      "routeKeys": {}
    },
    {
      "file": "./(quizzes)/(m1)/ComplexGerundsVSInfinitives.tsx",
      "page": "/(quizzes)/(m1)/ComplexGerundsVSInfinitives",
      "namedRegex": "^(?:/\\(quizzes\\))?(?:/\\(m1\\))?/ComplexGerundsVSInfinitives(?:/)?$",
      "routeKeys": {}
    },
    {
      "file": "expo-router/build/views/Sitemap.js",
      "page": "/_sitemap",
      "namedRegex": "^/_sitemap(?:/)?$",
      "routeKeys": {},
      "generated": true
    }
  ],
  "notFoundRoutes": [
    {
      "file": "./+not-found.tsx",
      "page": "/+not-found",
      "namedRegex": "^(?:/(?<notfound>.+?))?(?:/)?$",
      "routeKeys": {
        "notfound": "not-found"
      }
    }
  ]
}